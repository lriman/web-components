"use strict";function _typeof(obj){"@babel/helpers - typeof";if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof(obj);}Object.defineProperty(exports,"__esModule",{value:true});exports["default"]=void 0;var _react=_interopRequireWildcard(require("react"));var _propTypes=_interopRequireDefault(require("prop-types"));var _Span=_interopRequireDefault(require("../Typography/Span"));var _IconEqual=_interopRequireDefault(require("../Icon/IconEqual"));var _IconNotEqual=_interopRequireDefault(require("../Icon/IconNotEqual"));var _colorContext=_interopRequireDefault(require("../_context/colorContext"));var _GameNotationTimer=_interopRequireDefault(require("./_internal/GameNotationTimer"));var _GameNotationMove=_interopRequireDefault(require("./_internal/GameNotationMove"));var _GameNotationCountdown=_interopRequireDefault(require("./_internal/GameNotationCountdown"));var _TreeItems=_interopRequireDefault(require("./_internal/TreeItems"));var _InlineNotation=_interopRequireDefault(require("./_internal/InlineNotation"));var _utils=require("./_utils");var _style=require("./_style");var _utils2=require("../_utils");var _constants=require("./_constants");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj};}function _getRequireWildcardCache(){if(typeof WeakMap!=="function")return null;var cache=new WeakMap();_getRequireWildcardCache=function _getRequireWildcardCache(){return cache;};return cache;}function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}if(obj===null||_typeof(obj)!=="object"&&typeof obj!=="function"){return{"default":obj};}var cache=_getRequireWildcardCache();if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj["default"]=obj;if(cache){cache.set(obj,newObj);}return newObj;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}var getDrawIcon=function getDrawIcon(item){if(item.drawDeny)return/*#__PURE__*/_react["default"].createElement(_IconNotEqual["default"],null);if(item.drawRequest)return/*#__PURE__*/_react["default"].createElement(_IconEqual["default"],null);return null;};var getViewData=function getViewData(item,gameData,active,settings,colorType,isLeft,isRight,onChangeMove){if(!item)return/*#__PURE__*/_react["default"].createElement(_style.StyledGameNotationCell,{width:46,sColorType:colorType});if(item.san==='...')return/*#__PURE__*/_react["default"].createElement(_style.StyledGameNotationCell,{width:46,sColorType:colorType,isLeft:isLeft,isRight:isRight,isBlocked:true},item.san);return/*#__PURE__*/_react["default"].createElement(_style.StyledGameNotationCell,{id:"notation_".concat(item.moveIdString),isActive:item.moveIdString===active,isBlocked:settings.isBlocked,isNew:item.isNew,sColorType:colorType,isLeft:isLeft,isRight:isRight,width:46,onClick:function onClick(){return onChangeMove(item);}},item.san&&/*#__PURE__*/_react["default"].createElement(_style.StyledMove,{marginLeft:"0"},item.extra&&getDrawIcon(item.extra),/*#__PURE__*/_react["default"].createElement(_GameNotationMove["default"],{data:item,gameSettings:settings})),item.passedTime?/*#__PURE__*/_react["default"].createElement(_Span["default"],null,item.passedTime):null,item.showTime&&/*#__PURE__*/_react["default"].createElement(_GameNotationTimer["default"],{startDate:item.ts,gameData:gameData}),item.showCountdown&&/*#__PURE__*/_react["default"].createElement(_GameNotationCountdown["default"],{ts:item.ts}));};var GameNotation=function GameNotation(props){var gameData=props.gameData,notation=props.notation,settings=props.settings,columnLabels=props.columnLabels,active=props.active,onChangeMove=props.onChangeMove,onRemoveLine=props.onRemoveLine,rest=_objectWithoutProperties(props,["gameData","notation","settings","columnLabels","active","onChangeMove","onRemoveLine"]);var scrollToItem=function scrollToItem(){var target=document.getElementById("notation_".concat(active));var container=document.getElementById('notation_container');if(target&&container)(0,_utils.notationScroll)(target,container);};(0,_react.useEffect)(function(){setTimeout(scrollToItem);},[active]);//eslint-disable-line
var _useContext=(0,_react.useContext)(_colorContext["default"]),_useContext$colorType=_useContext.colorType,colorType=_useContext$colorType===void 0?'normal':_useContext$colorType;return/*#__PURE__*/_react["default"].createElement(_style.StyledGameNotation,(0,_utils2.addDataAttributes)({component:_constants.COMPONENTS.GENERAL}),/*#__PURE__*/_react["default"].createElement(_style.StyledGameNotationBody,_extends({id:"notation_container"},rest,{sColorType:colorType}),columnLabels&&/*#__PURE__*/_react["default"].createElement(_style.StyledGameNotationRow,null,/*#__PURE__*/_react["default"].createElement(_style.StyledGameNotationCell,{width:8,sColorType:colorType}),/*#__PURE__*/_react["default"].createElement(_style.StyledGameNotationCell,{width:46,sColorType:colorType,cellPadding:"10px 0px"},/*#__PURE__*/_react["default"].createElement(_style.StyledGameNotationColumnLabel,{sColorType:colorType},columnLabels.whiteMove)),/*#__PURE__*/_react["default"].createElement(_style.StyledGameNotationCell,{width:46,sColorType:colorType,cellPadding:"10px 0px"},/*#__PURE__*/_react["default"].createElement(_style.StyledGameNotationColumnLabel,{sColorType:colorType},columnLabels.blackMove))),notation.map(function(item,i){var _item$,_item$2;return/*#__PURE__*/_react["default"].createElement("div",{key:((_item$=item[0])===null||_item$===void 0?void 0:_item$.moveIdString)||i},/*#__PURE__*/_react["default"].createElement(_style.StyledGameNotationRow,null,/*#__PURE__*/_react["default"].createElement(_style.StyledGameNotationCell,{width:8,sColorType:colorType,isMoveNum:true,cellPadding:"10px 0px"},(_item$2=item[0])===null||_item$2===void 0?void 0:_item$2.moveNum),getViewData(item[0],gameData,active,settings,colorType,true,false,onChangeMove),getViewData(item[1],gameData,active,settings,colorType,false,true,onChangeMove)),/*#__PURE__*/_react["default"].createElement(_TreeItems["default"],{index:i,item:item[0],active:active,settings:settings,colorType:colorType,onChangeMove:onChangeMove,onRemoveLine:onRemoveLine}),/*#__PURE__*/_react["default"].createElement(_TreeItems["default"],{index:i,item:item[1],active:active,settings:settings,colorType:colorType,onChangeMove:onChangeMove,onRemoveLine:onRemoveLine}));})));};GameNotation.propTypes={gameData:_propTypes["default"].shape({}),settings:_propTypes["default"].shape({}),notation:_propTypes["default"].arrayOf(_propTypes["default"].arrayOf(_propTypes["default"].shape({}))).isRequired,columnLabels:_propTypes["default"].shape({whiteMove:_propTypes["default"].string,blackMove:_propTypes["default"].string}),active:_propTypes["default"].string,onChangeMove:_propTypes["default"].func,onRemoveLine:_propTypes["default"].func};GameNotation.defaultProps={gameData:undefined,settings:undefined,columnLabels:undefined,active:undefined,onChangeMove:function onChangeMove(){return null;},onRemoveLine:function onRemoveLine(){return null;}};GameNotation.Inline=_InlineNotation["default"];var _default=GameNotation;exports["default"]=_default;