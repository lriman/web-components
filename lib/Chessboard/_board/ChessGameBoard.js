"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.ChessGameBoard=void 0;var _Svg=require("./Svg");var _ChessboardView=require("./ChessboardView");var _ChessboardState=require("./ChessboardState");var _constants=require("../_constants");var _utils=require("./_utils");function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor;}var ChessGameBoard=/*#__PURE__*/function(){function ChessGameBoard(element){var _this=this;var props=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var callback=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;_classCallCheck(this,ChessGameBoard);this.element=element;this.props={id:'chessboard',position:'empty',orientation:_constants.COLOR.white,showCoordinates:true,showBorder:false,responsive:true,animationDuration:300,moveInputMode:_constants.MOVE_INPUT_MODE.viewOnly};Object.assign(this.props,props);this.state=new _ChessboardState.ChessboardState(props.id);this.state.orientation=this.props.orientation;this.state.moveInputMode=this.props.moveInputMode;this.state.markerStyle=_constants.MARKER_TYPE[this.props.markerStyle].color;this.state.setSprite(this.props.sprite);this.initialization=new Promise(function(resolve){_this.view=new _ChessboardView.ChessboardView(_this,function(){if(_this.props.position==='start'){_this.state.setPosition(_constants.FEN_START_POSITION);}else if(_this.props.position==='empty'||_this.props.position===null){_this.state.setPosition(_constants.FEN_EMPTY_POSITION);}else{_this.state.setPosition(_this.props.position);}setTimeout(function(){_this.view.redraw().then(function(){resolve();});});});}).then(function(){if(callback){callback(_this);}});}// API //
_createClass(ChessGameBoard,[{key:"setPiece",value:function setPiece(square,piece){var _this2=this;return new Promise(function(resolve){_this2.initialization.then(function(){_this2.state.setPiece((0,_utils.squareToIndex)(square),piece);_this2.view.drawPiecesDebounced(_this2.state.squares,function(){resolve();});});});}},{key:"getPiece",value:function getPiece(square){return this.state.squares[(0,_utils.squareToIndex)(square)];}},{key:"mount",value:function mount(eventHandler){this.mountCallback=eventHandler;}},{key:"setPosition",value:function setPosition(fen){var _this3=this;var animated=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;return new Promise(function(resolve){_this3.initialization.then(function(){var currentFen=_this3.state.getPosition();var fenParts=fen===null||fen===void 0?void 0:fen.split(' ');var fenNormalized=fenParts[0];if(fenNormalized!==currentFen){var prevSquares=_this3.state.squares.slice(0);// clone
if(fen==='start'){_this3.state.setPosition(_constants.FEN_START_POSITION);}else if(fen==='empty'||fen===null){_this3.state.setPosition(_constants.FEN_EMPTY_POSITION);}else{_this3.state.setPosition(fen);}if(animated){_this3.view.animatePieces(prevSquares,_this3.state.squares.slice(0),function(){resolve();});}else{_this3.view.drawPiecesDebounced();resolve();}}else{resolve();}});});}},{key:"setId",value:function setId(id){this.state.setId(id);this.clearMarkers();this.view.redraw();}},{key:"setMoveInputMode",value:function setMoveInputMode(eventHandler,value,color){this.state.setMoveInputMode(value);if(value===0)this.disableMoveInput();if(value===1)this.enableMoveInput(eventHandler,color);}},{key:"getPosition",value:function getPosition(){return this.state.getPosition();}},{key:"addMarker",value:function addMarker(square){var type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:_constants.MARKER_TYPE.purple;this.state.addMarker((0,_utils.squareToIndex)(square),type);this.view.drawMarkersDebounced();}},{key:"getMarkers",value:function getMarkers(){var square=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var markersFound=[];this.state.markers.forEach(function(marker){var markerSquare=_constants.SQUARE_COORDINATES[marker.index];if(square===null&&(type===null||type===marker.type)||type===null&&square===markerSquare||type===marker.type&&square===markerSquare){markersFound.push({square:_constants.SQUARE_COORDINATES[marker.index],type:marker.type});}});return markersFound;}},{key:"removeMarkers",value:function removeMarkers(){var square=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var index=square!==null?(0,_utils.squareToIndex)(square):null;this.state.removeMarkers(index,type);this.view.drawMarkersDebounced();}},{key:"clearMarkers",value:function clearMarkers(){this.state.clearMarkers();this.view.drawMarkersDebounced();}},{key:"setMarkerColor",value:function setMarkerColor(){var type=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'purple';this.state.seMarkerColor(_constants.MARKER_TYPE[type].color);}},{key:"setBoardStyles",value:function setBoardStyles(theme){this.state.setBoardStyles(theme);this.view.redraw();}},{key:"setHighLight",value:function setHighLight(data){var _this4=this;return new Promise(function(resolve){_this4.initialization.then(function(){_this4.view.removeHighLight(_this4.state.highLight);_this4.state.setHighLight(data);_this4.view.setHighLight(_this4.state.highLight);resolve();});});}},{key:"setSprite",value:function setSprite(sprite,position){var _this5=this;var pos=position;if(!position||position==='start')pos=_constants.FEN_START_POSITION;this.state.setSprite(sprite);this.view.destroy();(0,_utils.removeSpriteSvg)(_Svg.Svg);this.view.prepareLoadSprite(function(){return _this5.state.setPosition(pos);});this.view.drawPiecesDebounced(this.state.squares);}},{key:"setOrientation",value:function setOrientation(color){this.state.orientation=color;this.view.redraw();}},{key:"getOrientation",value:function getOrientation(){return this.state.orientation;}},{key:"destroy",value:function destroy(){var _this6=this;return new Promise(function(resolve){_this6.initialization.then(function(){_this6.view.destroy();_this6.view=null;_this6.state=null;_this6.element.removeEventListener('contextmenu',_this6.contextMenuListener);resolve();});});}},{key:"enableMoveInput",value:function enableMoveInput(eventHandler){var color=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;if(color===_constants.COLOR.white){this.state.inputWhiteEnabled=true;}else if(color===_constants.COLOR.black){this.state.inputBlackEnabled=true;}else{this.state.inputWhiteEnabled=true;this.state.inputBlackEnabled=true;}this.moveInputCallback=eventHandler;this.view.setCursor();}},{key:"disableMoveInput",value:function disableMoveInput(){this.state.inputWhiteEnabled=false;this.state.inputBlackEnabled=false;this.moveInputCallback=null;this.view.setCursor();}},{key:"enableContextInput",value:function enableContextInput(eventHandler){this.contextInputCallback=eventHandler;if(this.contextMenuListener){return;}this.contextMenuListener=function(e){e.preventDefault();};this.element.addEventListener('contextmenu',this.contextMenuListener);}},{key:"disableContextInput",value:function disableContextInput(){this.element.removeEventListener('contextmenu',this.contextMenuListener);}}]);return ChessGameBoard;}();exports.ChessGameBoard=ChessGameBoard;