"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports["default"]=StatusCard;var _react=_interopRequireDefault(require("react"));var _propTypes=_interopRequireDefault(require("prop-types"));var _utils=require("../_utils");var _Typography=require("../Typography");var _Icon=require("../Icon");var _constants=require("./_constants");var _style=require("./_style");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj};}function iconSize(size){switch(size){case _constants.REFS.SIZES.S:return'xs';case _constants.REFS.SIZES.L:return'xl';default:return'm';}}function getBoardInfoIcon(type,size){switch(type){case _constants.REFS.ICONS.W:return/*#__PURE__*/_react["default"].createElement(_Icon.IconChessBadgeWhite,{size:iconSize(size)});case _constants.REFS.ICONS.B:return/*#__PURE__*/_react["default"].createElement(_Icon.IconChessBadgeBlack,{size:iconSize(size)});case _constants.REFS.ICONS.WON:return/*#__PURE__*/_react["default"].createElement(_Icon.IconSuccessFill,{size:iconSize(size),color:"positive"});case _constants.REFS.ICONS.LOST:return/*#__PURE__*/_react["default"].createElement(_Icon.IconWarningFill,{size:iconSize(size),color:"negative"});default:return null;}}function getBoardInfoLabel(label,size){switch(size){case _constants.REFS.SIZES.S:return/*#__PURE__*/_react["default"].createElement(_Typography.Span,{size:"xs",weight:"medium"},label);case _constants.REFS.SIZES.L:return/*#__PURE__*/_react["default"].createElement(_Typography.H5,null,label);default:return/*#__PURE__*/_react["default"].createElement(_Typography.Span,{weight:"medium"},label);}}function getColor(type){switch(type){case'won':return'positive';case'lost':return'negative';default:return'normal';}}function StatusCard(props){var icon=props.icon,size=props.size,label=props.label;return/*#__PURE__*/_react["default"].createElement(_style.StyledStatusCard,(0,_utils.addDataAttributes)({component:_constants.COMPONENTS.GENERAL}),/*#__PURE__*/_react["default"].createElement(_style.StyledStatusCardInner,{sColor:getColor(icon),sSize:size},getBoardInfoIcon(icon,size),/*#__PURE__*/_react["default"].createElement(_style.StyledStatusCardValue,{sSize:size},getBoardInfoLabel(label,size))));}StatusCard.propTypes={icon:_propTypes["default"].oneOf(Object.values(_constants.REFS.ICONS)).isRequired,size:_propTypes["default"].oneOf(Object.values(_constants.REFS.SIZES)),label:_propTypes["default"].string.isRequired};StatusCard.defaultProps={size:_constants.REFS.SIZES.M};StatusCard.REFS=_constants.REFS;