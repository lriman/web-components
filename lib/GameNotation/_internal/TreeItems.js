"use strict";function _typeof(obj){"@babel/helpers - typeof";if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof(obj);}Object.defineProperty(exports,"__esModule",{value:true});exports["default"]=exports.getItems=exports.getViewData=void 0;var _react=_interopRequireDefault(require("react"));var _propTypes=_interopRequireDefault(require("prop-types"));var _Grid=_interopRequireWildcard(require("../../Grid"));var _Typography=require("../../Typography");var _Icon=require("../../Icon");var _GameNotationMove=_interopRequireDefault(require("./GameNotationMove"));var _constants=require("../_constants");var _utils=require("../_utils");var _utils2=require("../../_utils");var _style=require("../_style");function _getRequireWildcardCache(){if(typeof WeakMap!=="function")return null;var cache=new WeakMap();_getRequireWildcardCache=function _getRequireWildcardCache(){return cache;};return cache;}function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}if(obj===null||_typeof(obj)!=="object"&&typeof obj!=="function"){return{"default":obj};}var cache=_getRequireWildcardCache();if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj["default"]=obj;if(cache){cache.set(obj,newObj);}return newObj;}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj};}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}var getViewData=function getViewData(item,active,settings,colorType,onChangeMove){if(!item)return null;if(item.san==='...')return item.san;return/*#__PURE__*/_react["default"].createElement(_style.StyledGameNotationTreeLink,{id:"notation_".concat(item.moveIdString),isActive:item.moveIdString===active,sMargin:item.color==='b'&&'0 10px 0 0',sColorType:colorType,onClick:function onClick(){return onChangeMove(item);}},/*#__PURE__*/_react["default"].createElement(_GameNotationMove["default"],{data:item,gameSettings:settings}));};exports.getViewData=getViewData;var getItems=function getItems(index,item,active,settings,colorType,onChangeMove,onRemoveLine){var _item$items;if(!item)return null;return!!((_item$items=item.items)!==null&&_item$items!==void 0&&_item$items.length)&&item.items.map(function(line,k){return/*#__PURE__*/_react["default"].createElement(_style.StyledGameNotationTreeLine,{key:(0,_utils.getTreeKey)(line,k)},/*#__PURE__*/_react["default"].createElement(_style.StyledGameNotationTreeLineRemove,{sIndex:index,onClick:function onClick(){return onRemoveLine({line:line});}},/*#__PURE__*/_react["default"].createElement(_Icon.IconClose,{size:"s"})),/*#__PURE__*/_react["default"].createElement(_Grid["default"],{noWrap:true},/*#__PURE__*/_react["default"].createElement(_Grid.Item,null,/*#__PURE__*/_react["default"].createElement(_Typography.Span,{size:"s",color:"accent1"},"".concat(String.fromCharCode(97+k),") "))),/*#__PURE__*/_react["default"].createElement(_Grid.Item,{grow:true},!!line.length&&line.map(function(val,i){var _val$,_val$2;return/*#__PURE__*/_react["default"].createElement(_react["default"].Fragment,{key:((_val$=val[0])===null||_val$===void 0?void 0:_val$.moveIdString)||i},/*#__PURE__*/_react["default"].createElement(_Typography.Span,{size:"s",color:colorType==='normal'?'accent1':'minor'},"".concat((_val$2=val[0])===null||_val$2===void 0?void 0:_val$2.moveNum,".")),val[0]&&getViewData(val[0],active,settings,colorType,onChangeMove),val[1]&&getViewData(val[1],active,settings,colorType,onChangeMove),val[0]&&val[0].items&&getItems(index+i,val[0],active,settings,colorType,onChangeMove,onRemoveLine),val[1]&&val[1].items&&getItems(index+i,val[1],active,settings,colorType,onChangeMove,onRemoveLine));}))));});};exports.getItems=getItems;var TreeItems=function TreeItems(props){var index=props.index,item=props.item,active=props.active,settings=props.settings,colorType=props.colorType,onChangeMove=props.onChangeMove,onRemoveLine=props.onRemoveLine;if(!item||!item.items)return null;return/*#__PURE__*/_react["default"].createElement(_style.StyledGameNotationTree,_extends({sColorType:colorType},(0,_utils2.addDataAttributes)({component:_constants.COMPONENTS.NOTATION_TREE})),getItems(index,item,active,settings,colorType,onChangeMove,onRemoveLine));};TreeItems.propTypes={item:_propTypes["default"].shape(),index:_propTypes["default"].number,active:_propTypes["default"].string,settings:_propTypes["default"].shape(),colorType:_propTypes["default"].string.isRequired,onChangeMove:_propTypes["default"].func,onRemoveLine:_propTypes["default"].func};TreeItems.defaultProps={item:undefined,index:undefined,active:undefined,settings:undefined,onChangeMove:function onChangeMove(){return null;},onRemoveLine:function onRemoveLine(){return null;}};var _default=TreeItems;exports["default"]=_default;